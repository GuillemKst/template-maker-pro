// Welcome Card Example
// Run this with: node examples/welcome-card-example.js

import fetch from 'node-fetch';
import fs from 'fs';

const API_URL = 'http://localhost:3000';

async function generateWelcomeCard() {
  const response = await fetch(`${API_URL}/api/generate-image`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({
      data: {
        name: 'Guillem',
        role: "I'm a builder",
        timezone: 'Spain/Barcelona',
        skills: 'JavaScript, Node.js, React, TypeScript, MongoDB, Express, API Development',
        projects: 'Image Generator API, Telegram Bots, Discord Integrations, Full-stack Applications',
        profileImage: 'placeholder' // This will show a profile placeholder
      }
    })
  });

  if (response.ok) {
    const buffer = await response.buffer();
    fs.writeFileSync('examples/welcome-card.png', buffer);
    console.log('‚úÖ Welcome card generated: examples/welcome-card.png');
  } else {
    console.error('‚ùå Error:', response.statusText);
    const errorText = await response.text();
    console.error('Error details:', errorText);
  }
}

async function generateCustomStyledCard() {
  const response = await fetch(`${API_URL}/api/generate-image`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({
      data: {
        name: 'Guillem',
        role: "I'm a builder",
        timezone: 'Spain/Barcelona',
        skills: 'JavaScript, Node.js, React',
        projects: 'Image Generator API, Telegram Bots'
      },
      template: {
        width: 700,
        height: 900,
        backgroundColor: '#0d1117',
        layout: [
          // Profile area background
          { key: 'bg', x: 0, y: 0, text: '', fontSize: 1 },
          
          // Header
          { key: 'welcome', x: 60, y: 100, fontSize: 32, color: '#58a6ff', text: 'üëã Welcome Guillem!' },
          { key: 'role', x: 60, y: 160, fontSize: 20, color: '#7d8590', text: "I'm a builder" },
          
          // Sections with better spacing
          { key: 'timezone_icon', x: 60, y: 250, fontSize: 24, color: '#f0883e', text: 'üåç' },
          { key: 'timezone_label', x: 100, y: 250, fontSize: 20, color: '#f0883e', text: 'Timezone' },
          { key: 'timezone_value', x: 60, y: 290, fontSize: 18, color: '#e6edf3', text: 'Spain/Barcelona' },
          
          { key: 'skills_icon', x: 60, y: 380, fontSize: 24, color: '#f0883e', text: 'üî®' },
          { key: 'skills_label', x: 100, y: 380, fontSize: 20, color: '#f0883e', text: 'Skills' },
          { key: 'skills_value', x: 60, y: 420, fontSize: 18, color: '#e6edf3', text: 'JavaScript, Node.js, React', maxWidth: 580 },
          
          { key: 'projects_icon', x: 60, y: 540, fontSize: 24, color: '#f0883e', text: 'üöÄ' },
          { key: 'projects_label', x: 100, y: 540, fontSize: 20, color: '#f0883e', text: 'Projects' },
          { key: 'projects_value', x: 60, y: 580, fontSize: 18, color: '#e6edf3', text: 'Image Generator API, Telegram Bots', maxWidth: 580 },
          
          // Footer
          { key: 'footer', x: 350, y: 820, fontSize: 14, color: '#7d8590', text: 'Generated by Image API', align: 'center' }
        ]
      }
    })
  });

  if (response.ok) {
    const buffer = await response.buffer();
    fs.writeFileSync('examples/custom-welcome-card.png', buffer);
    console.log('‚úÖ Custom welcome card generated: examples/custom-welcome-card.png');
  } else {
    console.error('‚ùå Error:', response.statusText);
    const errorText = await response.text();
    console.error('Error details:', errorText);
  }
}

async function main() {
  console.log('üé® Welcome Card Generator Examples\n');
  
  try {
    console.log('Generating default welcome card...');
    await generateWelcomeCard();
    
    console.log('\nGenerating custom styled welcome card...');
    await generateCustomStyledCard();
    
    console.log('\nüéâ All welcome cards generated successfully!');
    console.log('\nüìã Usage for Telegram bot:');
    console.log('POST /api/generate-image');
    console.log('Body: {');
    console.log('  "data": {');
    console.log('    "name": "Username",');
    console.log('    "role": "Role description",');
    console.log('    "timezone": "Country/City",');
    console.log('    "skills": "Comma separated skills",');
    console.log('    "projects": "Description of projects",');
    console.log('    "profileImage": "optional"');
    console.log('  }');
    console.log('}');
  } catch (error) {
    console.error('‚ùå Error:', error.message);
    console.log('\nüí° Make sure the API server is running: npm run dev');
  }
}

main();
